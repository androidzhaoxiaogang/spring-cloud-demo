# Define the port where the UAA server would be running
server:
  port: 11115
  ssl:
    keyStore: classpath:server.jks
    keyStorePassword: password
    keyPassword: password
  # Use different context-path to avoid session cookie overlapping
  context-path: /uaa

# Define security
security:
  basic:
    enabled: false
  user:
    password: password
  ignored: /css/**,/js/**,/favicon.ico,/webjars/**
  oauth2:
    client:
      clientId: acme
      clientSectet: acmesecret
      authorizedGrantTypes: authorization_code,refresh_token,implicit,password,client_credentials
      scop: openid

logging.level.root=WARN
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.security.oauth2.config.annotation.web.configurers.FrameworkEndpointHandlerMapping=INFO
logging.level.org.springframework.security.oauth2.provider.client.ClientCredentialsTokenGranter=DEBUG
logging.level.org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter=DEBUG
logging.level.org.springframework.security.oauth2.provider.code.AuthorizationCodeTokenGranter=DEBUG
logging.level.org.springframework.security.oauth2.provider.implicit.ImplicitTokenGranter=DEBUG
logging.level.org.springframework.security.oauth2.provider.approval.ApprovalStoreUserApprovalHandler=DEBUG
logging.level.org.springframework.security.oauth2.provider.endpoint.TokenEndpoint=INFO
logging.level.org.springframework.security.oauth2.provider.approval.AuthorizationEndpoint=INFO

# Set INFO to see the allocated port
logging.level.org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer=INFO
logging.level.org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer=INFO

logging.level.se.callista=INFO